name: Pruebas usando variables
run-name: ¡Estoy probando variables a usar Variables!
on:
  workflow_dispatch:
    inputs:
      username:
        description: "GitHub username a invitar (sin @)"
        required: true
        type: string
      team:
        description: "Nombre del team en la organización"
        required: true
        type: string
      repo:
        description: "Repositorio destino para asignar permisos (nombre)"
        required: true
        type: string
      permission:
        description: "Permiso en repo: pull, triage, push, maintain, admin"
        required: true
        default: "push"
        type: string

jobs:
  onboarding:
    runs-on: ubuntu-latest
    permissions:
      actions: write
      contents: read
      issues: write
    steps:
     - name: Auth gh con token
       env:
          GH_TOKEN1: ${{ secrets.GH_TOKEN }}
       run: |
          echo "$GH_TOKEN1" | gh auth login --with-token
     - name: Obtener ID de usuario (si existe)
       id: userid
       run: |
          set -e
          USER="${{ inputs.username }}"
          # Si no existe, 'gh api users/...' fallará. Manejamos la salida.
          if gh api users/$USER --jq '.id' >/dev/null 2>&1; then
            echo "id=$(gh api users/$USER --jq '.id')" >> "$GITHUB_OUTPUT"
          else
            echo "id=" >> "$GITHUB_OUTPUT"
          fi
     - name: Usar el ID en otro paso
       run: |
          echo "El ID del usuario es: ${{ steps.userid.outputs.id }}"
     - name: Invitar usuario a la organización (si no es miembro)
       env:
          ORG: ${{ inputs.team }}
       run: |
          USER="${{ inputs.username }}"
          # Invitar por nombre de usuario (si no pertenece ya)
          MEMBERSHIP=$(gh api /orgs/$ORG/members/$USER -q . >/dev/null 2>&1 || echo "not_member")
          if [ "$MEMBERSHIP" = "not_member" ]; then
            echo "Invitando $USER a $ORG"
            
            INVITEE_ID=$(gh api users/$USER | jq -r '.id')
            INVITEE_ID1=$(gh api users/$USER --jq '.id' | sed 's/"//g')
            INVITEE_ID2=$(gh api users/$USER --jq '.id' | tr -d '"')


            echo "id 1 -> $INVITEE_ID **"
            echo "id 2 -> $INVITEE_ID1 **"
            echo "id 3 -> $INVITEE_ID2 **"

            gh api --method POST /orgs/$ORG/invitations \
            -f invitee_id=234737768 \
            -f role=direct_member || true

            
          else
            echo "$USER ya es miembro o no se pudo comprobar membership; continuamos"
          fi
