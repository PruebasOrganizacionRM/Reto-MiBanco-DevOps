name: Pruebas usando variables
run-name: Â¡Estoy probando variables a usar Variables!
on:
  workflow_dispatch:
    inputs:
      username:
        description: "GitHub username a invitar (sin @)"
        required: true
        type: string
      team:
        description: "Nombre del team en la organizaciÃ³n"
        required: true
        type: string
      repo:
        description: "Repositorio destino para asignar permisos (nombre)"
        required: true
        type: string
      permission:
        description: "Permiso en repo: pull, triage, push, maintain, admin"
        required: true
        default: "push"
        type: string

jobs:
  onboarding:
    runs-on: ubuntu-latest
    permissions:
      actions: write
      contents: read
      issues: write
    steps:
     - name: Auth gh con token
       env:
          GH_TOKEN1: ${{ secrets.GH_TOKEN }}
       run: |
          echo "$GH_TOKEN1" | gh auth login --with-token
     - name: Obtener ID de usuario (si existe)
       id: userid
       run: |
          set -e
          USER="${{ inputs.username }}"
          # Si no existe, 'gh api users/...' fallarÃ¡. Manejamos la salida.
          if gh api users/$USER --jq '.id' >/dev/null 2>&1; then
            echo "id=$(gh api users/$USER --jq '.id')" >> "$GITHUB_OUTPUT"
          else
            echo "id=" >> "$GITHUB_OUTPUT"
          fi
     - name: Usar el ID en otro paso
       run: |
          echo "El ID del usuario es: ${{ steps.userid.outputs.id }}"
     - name: Invitar usuario a la organizaciÃ³n (si no es miembro)
       env:
          ORG: ${{ inputs.team }}
       run: |
          USER="${{ inputs.username }}"
          # Invitar por nombre de usuario (si no pertenece ya)
          MEMBERSHIP=$(gh api /orgs/$ORG/members/$USER -q . >/dev/null 2>&1 || echo "not_member")
          if [ "$MEMBERSHIP" = "not_member" ]; then
            echo "Invitando $USER a $ORG"
            
            INVITEE_ID=$(gh api users/$USER --jq '.id')

            gh api --method POST /orgs/$ORG/invitations \
            -f invitee_id=$INVITEE_ID \
            -f role=direct_member
          else
            echo "$USER ya es miembro o no se pudo comprobar membership; continuamos"
          fi
     
     - name: Agregar usuario al equipo
       env:
          ORG: ${{ inputs.team }}
       run: |
          gh api --method PUT /orgs/$ORG/teams/${{ inputs.team }}/memberships/${{ inputs.username }} || true
     
     - name: Asignar permisos en repositorio
       env:
          ORG: ${{ inputs.team }}
       run: |
          gh api --method PUT /orgs/$ORG/teams/${{ inputs.team }}/repos/$ORG/${{ inputs.repo }} -f permission=${{ inputs.permission }} || true

     - name: Crear issue de bienvenida
       env:
          ORG: ${{ inputs.team }}
       run: |
          gh issue create --repo $ORG/${{ inputs.repo }} --title "ðŸŽ‰ Bienvenido @${{ inputs.username }}!" \
            --body "Hola @${{ inputs.username }}\n\nBienvenido a **${{ inputs.team }}**. AquÃ­ tienes:\n- Repo: ${{ inputs.repo }}\n- Permiso: ${{ inputs.permission }}\n\nSi necesitas acceso adicional, abre un ticket." || true
      
