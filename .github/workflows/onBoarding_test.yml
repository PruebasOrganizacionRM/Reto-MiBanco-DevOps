name: OnBoarding pruebas
run-name: ¬°Estoy ejecutando pruebas de onboarding!
on:
  workflow_dispatch:
    inputs:
      username:
        description: "GitHub username a invitar (sin @)"
        required: true
        type: string
      org:
        description: "Nombre de la organizaci√≥n"
        required: true
        type: string
      team:
        description: "Nombre del team en la organizaci√≥n"
        required: true
        type: string
      repo:
        description: "Repositorio destino para asignar permisos (nombre)"
        required: true
        type: string
      permission:
        description: "Permiso en repo: pull, triage, push, maintain, admin"
        required: true
        default: "push"
        type: string

jobs:
  onboarding:
    runs-on: ubuntu-latest
    permissions:
      actions: write
      contents: read
      issues: write
    steps:
     - name: Auth gh con token
       env:
          GH_TOKEN1: ${{ secrets.GH_TOKEN }}
       run: |
          echo "$GH_TOKEN1" | gh auth login --with-token
     - name: Obtener ID de usuario (si existe)
       id: userid
       run: |
          set -e
          USER="${{ inputs.username }}"
          # Si no existe, 'gh api users/...' fallar√°. Manejamos la salida.
          if gh api users/$USER --jq '.id' >/dev/null 2>&1; then
            echo "id=$(gh api users/$USER --jq '.id')" >> "$GITHUB_OUTPUT"
          else
            echo "id=" >> "$GITHUB_OUTPUT"
          fi
     - name: Usar el ID en otro paso
       run: |
          echo "El ID del usuario es: ${{ steps.userid.outputs.id }}"
     - name: Agregar usuario al equipo
       env:
          ORG: ${{ inputs.org }}
          USER: ${{ inputs.username }}
          TEAM_INPUT: ${{ inputs.team }}
       run: |
          
          # TEAM_SLUG=$(gh api /orgs/$ORG/teams --jq '.[] | {name: .name, slug: .slug}')
          TEAM_SLUG=$(gh api /orgs/$ORG/teams --paginate \
          --jq ".[] | select(.slug==\"$TEAM_INPUT\" or .name==\"$TEAM_INPUT\") | .slug")
          echo "üìå Slug del equipo encontrado: $TEAM_SLUG"
          if [ -z "$TEAM_SLUG" ]; then
            echo "‚ùå ERROR: El equipo '$TEAM_INPUT' no existe en la organizaci√≥n '$ORG'."
            echo "‚ÑπÔ∏è  Equipos disponibles:"
            gh api /orgs/$ORG/teams --jq '.[].slug'
            exit 1
          fi
          
     
     
      
